{
  "alb": {
    "prefix": "alb",
    "body": [
      "---",
      "apiVersion: networking.k8s.io/v1",
      "kind: Ingress",
      "metadata:",
      "  annotations:",
      "    alb.ingress.kubernetes.io/actions.ssl-redirect: '{'Type': 'redirect', 'RedirectConfig': 'Protocol': 'HTTPS', 'Port': '443', 'StatusCode': 'HTTP_301'}}'",
      "    alb.ingress.kubernetes.io/group.name: ${1:alb_group_name}",
      "    alb.ingress.kubernetes.io/group.order: '${2:alb_group_order}',
      "    alb.ingress.kubernetes.io/scheme: ${3:alb_face}",
      "    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTPS\":443}]'",
      "    alb.ingress.kubernetes.io/ssl-redirect: 443",
      "    alb.ingress.kubernetes.io/success-codes: 200-499",
      "    alb.ingress.kubernetes.io/target-type: ip",
      "    kubernetes.io/ingress.class: alb",
      "  name: ${4:alb_name}",
      "spec:",
      "  rules:",
      "  - host: ${5:alb_fqdn}",
      "    http:",
      "      paths:",
      "      - backend:",
      "          service:",
      "            name: ${6:alb_svc_name}",
      "            port:",
      "              number: ${7:alb_svc_port}",
      "        path: ${8:alb_path}",
      "        pathType: ImplementationSpecific"
    ],
    "description": "Code snippet for a ALB definition"
  },
  "cmf": {
    "prefix": "cmf",
    "body": [
      "---",
      "apiVersion: v1", 
      "kind: ConfigMap", 
      "metadata:", 
      "  name: ${1:configmapname}", 
      "data:", 
      "  LOG_LEVEL: DEBUG", 
      "  default-user: marcel"
    ],
    "description": "Code snippet for a ConfigMap definition"
  },
  "ingress": {
    "prefix": "ingress",
    "body": [
      "---",
      "apiVersion: networking.k8s.io/v1beta1",
      "kind: Ingress",
      "metadata:",
      "  name: ${1:ingressname}",
      "spec:",
      "  rules:",
      "  - host: ${2:ingressfqdn}",
      "    http:",
      "      paths:",
      "      - path: ${3:ingresspath}",
      "        backend:",
      "          serviceName: ${4:ingresssvcname}",
      "          servicePort: ${5:ingresssvcport}",
      "  tls:",
      "  - hosts:",
      "    - ${6:ingressfqdntls}",
      "    secretName: ${7:ingresstlsname}"
    ],
    "description": "Code snippet for a Ingress definition"
  },
  "res": {
    "prefix": "res",
    "body": [
      "    resources:",
      "      limits:",
      "        cpu: 250m",
      "        memory: 750Mi",
      "      requests:",
      "        cpu: 100m",
      "        memory: 500Mi"
    ],
    "description": "Code snippet for a resources include"
  },
  "secret": {
    "prefix": "secret",
    "body": [
      "---",
      "apiVersion: v1",
      "kind: Secret",
      "metadata:",
      "  name: ${1:secretname}",
      "data:",
      "  username: am9obg== # (echo 'john'   | base64)",
      "  password: Zm9vYmFy # (echo 'foobar' | base64)"
    ],
    "description": "Code snippet for a Secret definition"
  }
}
